# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
landscape: (( &temporary ))
imports: (( &temporary ))

plugins:
  - pinned:
    - helm:
      - ingresscontroller
      - template
    - kubectl: ingresscontroller

settings:
  ingress_domain: (( "ing." landscape.domain ))

ingresscontroller:
  kubeconfig: (( landscape.clusters.[0].kubeconfig ))
  files:
    - "ingresscontroller/rendered_charts.yaml"
  source: "git/repo/charts/ingress-nginx"
  name: "nginx-ingress"
  namespace: "kube-system"
  values:
    fullnameOverride: (( .ingresscontroller.name ))
    controller:
      name: "controller"
      image:
        repository: (( .landscape.versions.ingress-controller.image_repo ))
        tag: (( .landscape.versions.ingress-controller.image_tag ))
        digest: ~
      podLabels:
        app: nginx-ingress
        component: controller
      nodeSelector: {}
      replicaCount: 3
      priorityClassName: system-cluster-critical
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - (( ingresscontroller.name ))
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - (( controller.name ))
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - ingress-nginx
      service:
        enabled: true
        annotations:
          "dns.gardener.cloud/class": (( imports.dns-controller.export.dns-class ))
          "dns.gardener.cloud/dnsnames": (( "*." .settings.ingress_domain ))
          "dns.gardener.cloud/ttl": (( landscape.defaultTTL ))
          <<: (( landscape.ingress.annotations || ~ ))
      admissionWebhooks:
        enabled: false
      extraArgs:
        enable-ssl-passthrough: true
        update-status: true
    defaultBackend:
      enabled: true
      name: "k8s-backend"
      image:
        repository: (( .landscape.versions.nginx-ingress-k8s-backend.image_repo ))
        tag: (( .landscape.versions.nginx-ingress-k8s-backend.image_tag ))
        pullPolicy: IfNotPresent
      livenessProbe:
        initialDelaySeconds: 30
        timeoutSeconds: 5
      port: 8080
      extraEnvs:
        - name: HEALTH_ENDPOINT
          value: "/healthz"
