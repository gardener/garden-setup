---
imports: (( &temporary ))
landscape: (( &temporary ))
utilities: (( &temporary ))

plugins:
  - kubectl: prometheus

prometheus: (( sum[list_files( __ctx.DIR "/manifests" )|[]|s,f|-> s .utilities.kubectl.generate( __ctx.DIR "/manifests/" f, .landscape.clusters[0].kubeconfig, .kubectlconfig )] ))

kubectlconfig:
  <<: (( &temporary ))
  namespace: (( .landscape.namespace ))
  monitoring_versions: (( .landscape.versions.monitoring ))
  apiserver_cert: (( .imports.kube_apiserver.export.kube_apiserver_ca ))
  ingress_domain: (( .landscape.domains.ingress_dns ))
  settings: (( .settings ))

settings:
  monitoring_credentials: (( .state.monitoring_credentials.value ))
  prometheus_domain: (( "garden-prometheus." .landscape.domains.ingress_dns ))
  monitoring: (( landscape.monitoring ))
monitoring_password:
  <<: (( &temporary ))
  input:
    username: (( valid( hash ) ? ~~ :.landscape.monitoring.username ))
    password: (( .landscape.monitoring.password || ~~ ))
    hash: (( .landscape.monitoring.hash || ~~ ))
  value:
    <<: (( &template ))
    data:
      password: (( valid( input.hash ) ? ~~ :( input.password || rand("[:alnum:]", 20) ) ))
    state:
      password: (( data.password || ~~ ))
      hash: (( input.hash || exec_uncached( ["htpasswd", "-nb", input.username, data.password] ) ))

state:
  <<: (( &state(merge none) ))
  monitoring_credentials: (( utilities.state.standard( .monitoring_password, false ) ))

