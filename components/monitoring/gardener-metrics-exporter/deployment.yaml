---
imports: (( &temporary ))
landscape: (( &temporary ))
env: (( &temporary ))

plugins:
  - kubectl: kubectl_sa
  - kubectl_patch
  - pinned:
    - helm:
      - helm
      - spiff
      - template
    - kubectl: helm

kubectl_sa:
  kubeconfig: (( .imports.kube-apiserver.export.kubeconfig ))
  manifests:
    - apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: (( .settings.serviceaccount_name ))
        namespace: (( .landscape.namespace ))
        labels:
          app: gardener
          role: metrics-exporter
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: garden.sapcloud.io:metrics-exporter
      rules:
      - apiGroups:
        - garden.sapcloud.io
        - core.gardener.cloud
        resources:
        - shoots
        - seeds
        - projects
        - plants
        verbs:
        - get
        - watch
        - list
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: garden.sapcloud.io:metrics-exporter
      subjects:
      - kind: ServiceAccount
        name: (( .settings.serviceaccount_name ))
        namespace: (( .landscape.namespace ))
      roleRef:
        kind: ClusterRole
        name: garden.sapcloud.io:metrics-exporter
        apiGroup: rbac.authorization.k8s.io

kubectl_patch:
  kubeconfig: (( .landscape.clusters[0].kubeconfig ))
  resource: configmap
  name: (( .imports.grafana.export.grafana_dashboards_configmap ))
  namespace: (( .landscape.namespace ))
  patch:
    deploy: (( asyaml( .patch.deploy ) ))
    delete: (( asyaml( .patch.delete ) ))

helm:
  kubeconfig: (( landscape.clusters.[0].kubeconfig ))
  files:
    - "helm/rendered_charts.yaml"
  source: "git/repo/charts/gardener-metrics-exporter"
  name: gardener-metrics-exporter
  namespace: (( .landscape.namespace ))
  values:
    image:
      repository: (( .landscape.versions.monitoring.gardener-metrics-exporter.image_repo || ~~ ))
      tag: (( .landscape.versions.monitoring.gardener-metrics-exporter.image_tag || ~~ ))
    kubeconfig: (( format( "((! asyaml( merge( read( \"%s/export/kube-apiserver/kubeconfig_internal_merge_snippet\", \"yaml\" ), read( \"%s/kubectl_sa/sa_%s.kubeconfig\" , \"yaml\") ) ) ))", env.ROOTDIR, env.GENDIR, .settings.serviceaccount_name ) ))

settings:
  dashboard_path_prefix: (( env.GENDIR "/git/repo/dashboards/" ))
  serviceaccount_name: gardener-metrics-exporter
  excluded_dashboards:
    - shoot-state-overview-dashboard.json

patch:
  <<: (( &temporary ))
  deploy:
    data: (( sum[list_files( .settings.dashboard_path_prefix )|{}|s,f|-> contains( .settings.excluded_dashboards, f ) ? s :s { f = read( .settings.dashboard_path_prefix f, "text" ) }] ))
  delete:
    data: (( sum[list_files( .settings.dashboard_path_prefix )|{}|s,f|-> contains( .settings.excluded_dashboards, f ) ? s :s { f = "null" }] ))
  