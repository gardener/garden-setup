#!/usr/bin/env bash
# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Takes a kubeconfig file and creates a secret manifest for it. The manifest is not applied.
create_kubeconfig_secret()
{
  PLUGIN_setup "$2" create_kubeconfig_secret
  getRequiredValue name "name" PLUGINCONFIGJSON
  getRequiredValue namespace "namespace" PLUGINCONFIGJSON
  getRequiredValue kubeconfig_path "kubeconfig_path" PLUGINCONFIGJSON
  getValue write_to "write_to" PLUGINCONFIGJSON
  getValue server "server" PLUGINCONFIGJSON

  local kubeconfig="Zm9v"
  if [ "$1" = "deploy" ]; then
    if [[ ! -f "$kubeconfig_path" ]]; then
      fail "kubeconfig not found at path '$kubeconfig_path'"
    fi
    kubeconfig=$(cat "$kubeconfig_path" | replace_server "$server" | base64 | tr -d \\n)
  fi

  local secret_path="$dir/secret_$name.yaml"
  cat > "$secret_path" << EOF
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: $name
  namespace: $namespace
data:
  kubeconfig: $kubeconfig
EOF

  if [[ -n ${write_to:-""} ]]; then
    verbose "Writing kubeconfig secret to '$write_to'"
    cp -f "$secret_path" "$write_to"
  fi
}

replace_server()
{
  if [[ -n ${1:-""} ]]; then
    # convert to json using spiff, replace server url, convert back to yaml
    verbose "Replacing server url with '$1' ..."
    spiff merge --json - | jq -r ".clusters[0].server = \"$1\"" | spiff merge -
  else
    # just pipe input through without modifying it
    cat -
  fi
}