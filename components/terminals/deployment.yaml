---
imports: (( &temporary ))
landscape: (( &temporary ))
utilities: (( &temporary ))
env: (( &temporary ))

plugins:
  - pinned:
    - kustomize: kustomize.virtual.render
    - kubectl: kustomize.virtual.apply
  - pinned:
    - kubectl: kubectl_sa # create serviceaccount and clusterrole
    - create_kubeconfig_secret: kcfg_admin # create secret manifest for admin kubeconfig
    - create_kubeconfig_secret: kcfg_sa # create secret manifest for sa kubeconfig (directly overrides checked-out charts)
    - kubectl: kubectl_admin_kubeconfig # apply admin kubeconfig secret
  - pinned:
    - kustomize: kustomize.runtime.render
    - kubectl: kustomize.runtime.apply

kcfg_admin:
  name: (( settings.kubeconfig_secret_name ))
  namespace: (( .landscape.namespace ))
  kubeconfig_path: (( .settings.kubeconfig_path ))

kcfg_sa:
  name: kubeconfig
  namespace: terminal-system
  kubeconfig_path: (( .settings.kubeconfig_secret_path_sa ))
  write_to: (( .settings.repo_path "/config/overlay/multi-cluster/runtime/manager/kubeconfig-secret.yaml" ))
  server: (( .imports.kube-apiserver.export.apiserver_url_internal ))

kubectl_sa:
  kubeconfig: (( .imports.kube-apiserver.export.kubeconfig ))
  manifests:
    - apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: default
        namespace: terminal-system
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: dashboard.gardener.cloud:system:project-member
        labels:
          rbac.gardener.cloud/aggregate-to-project-member: "true"
      rules:
      - apiGroups:
        - dashboard.gardener.cloud
        resources:
        - terminals
        verbs:
        - create
        - delete
        - deletecollection
        - get
        - list
        - patch
        - update
        - watch

kubectl_admin_kubeconfig:
  kubeconfig: (( .imports.kube-apiserver.export.kubeconfig ))
  files:
    - (( .settings.kubeconfig_secret_path_admin ))

kustomize:
  virtual:
    render:
      path: (( .settings.repo_path ))
      kustomization: (( "config/overlay/multi-cluster/virtual-garden" ))
    apply:
      kubeconfig: (( .imports.kube-apiserver.export.kubeconfig ))
      files:
        - (( env.GENDIR "/kustomize.virtual.render/manifest.yaml" ))
  runtime:
    render:
      path: (( .settings.repo_path ))
      kustomization: (( "config/overlay/multi-cluster/runtime" ))
    apply:
      kubeconfig: (( .landscape.clusters[0].kubeconfig ))
      files:
        - (( env.GENDIR "/kustomize.runtime.render/manifest.yaml" ))

settings:
  namespace: terminal-system                                                                              # terminal controller manager namespace
  kubeconfig_secret_name: garden-kubeconfig-for-admin                                                     # name of admin kubeconfig secret
  kubeconfig_path: (( env.GENDIR "/" kubeconfig_secret_name ".kubeconfig" ))                              # path to admin kubeconfig
  kubeconfig_secret_path_sa: (( env.GENDIR "/kubectl_sa/sa_default.kubeconfig" ))                         # path to secret manifest for sa kubeconfig
  kubeconfig_secret_path_admin: (( env.GENDIR "/kcfg_admin/secret_" kubeconfig_secret_name ".yaml" ))     # path to secret manifest for admin kubeconfig
  repo_path: (( env.GENDIR "/git/repo" ))                                                                 # path to checked-out git repo for easy access
  cert_path: (( repo_path "/config/secret/tls" ))                                                         # path to tls folder in checked-out git repo

writefiles:
  <<: (( &temporary ))
  admin_kubeconfig: (( write( .settings.kubeconfig_path, .imports.kube-apiserver.export.kubeconfig ) )) # 'copy' admin kubeconfig to GENDIR
  cert:
    crt: (( write( .settings.cert_path "/terminal-controller-manager-tls.pem", .state.cert.value.cert ) ))
    key: (( write( .settings.cert_path "/terminal-controller-manager-tls-key.pem", .state.cert.value.key ) ))

spec:
  <<: (( &temporary ))
  cert:
    commonName: "terminal-webhook-service.terminal-system.svc.cluster.local"
    validity: 87600
    usage:
      - ServerAuth
      - ClientAuth
      - KeyEncipherment
    hosts:
      - "terminal-webhook-service"
      - "terminal-webhook-service.terminal-system"
      - "terminal-webhook-service.terminal-system.svc"
      - "terminal-webhook-service.terminal-system.svc.cluster"
      - "terminal-webhook-service.terminal-system.svc.cluster.local"

state:
  <<: (( &state(merge none) ))
  ca: (( utilities.certs.selfSignedCA("ca-gardener-term", false) ))
  cert: (( utilities.certs.keyCertForCA(spec.cert, ca, false) ))
