---
imports: (( &temporary ))
landscape: (( &temporary ))
utilities: (( &temporary ))
env: (( &temporary ))

plugins:
  - pinned:
    - helm:
      - terminals.virtual
      - template
    - kubectl: terminals.virtual
  - pinned:
    - helm:
      - terminals.runtime
      - template
    - kubectl: terminals.runtime

terminals:
  common:
    values:
      global:
        admission:
          config:
            server:
              webhooks:
                caBundle: (( .state.ca.value.cert ))
                tls:
                  crt: (( .state.cert.value.cert ))
                  key: (( .state.cert.value.key ))
        controller:
          serviceAccountName: terminal-controller-manager
          manager:
            image:
              repository: (( .landscape.versions.terminal-controller-manager.image_repo || ~~ ))
              tag: (( .landscape.versions.terminal-controller-manager.image_tag || ~~ ))
              pullPolicy: (( defined( tag ) -and tag != "latest" ? "IfNotPresent" :"Always" ))
            kubeconfig: (( asyaml(.imports.kube-apiserver.export.kubeconfig) ))
          kubeRBACProxy:
            image:
              repository: (( .landscape.versions.terminal-kube-rbac-proxy.image_repo || ~~ ))
              tag: (( .landscape.versions.terminal-kube-rbac-proxy.image_tag || ~~ ))
              pullPolicy: (( defined( tag ) -and tag != "latest" ? "IfNotPresent" :"Always" ))
            kubeconfig: (( asyaml(.kube-rbac-proxy.kubeconfig) ))
        deployment:
          virtualGarden:
            enabled: true
          createNamespace: true
          createCRD: true
  virtual:
    kubeconfig: (( .imports.kube-apiserver.export.kubeconfig ))
    files:
      - "terminals.virtual/rendered_charts.yaml"
    source: "git/repo/charts/terminal/charts/application"
    name: "terminals"
    namespace: (( .settings.namespace ))
    values: (( common.values ))
  runtime:
    kubeconfig: (( landscape.clusters.[0].kubeconfig ))
    files:
      - "terminals.runtime/rendered_charts.yaml"
    source: "git/repo/charts/terminal/charts/runtime"
    name: "terminals"
    namespace: (( .settings.namespace ))
    values: (( common.values ))

kube-rbac-proxy:
  template:
    <<: (( &template(merge) ))
    users:
    - name: (( stub() ))
      user:
        tokenfile: "/var/run/secrets/projected/serviceaccount/token"
  kubeconfig: (( merge(template, read(lookup_file(landscape.clusters.[0].kubeconfig, env.ROOTDIR).[0], "yaml")) ))

settings:
  namespace: terminal-system                                                                              # terminal controller manager namespace

spec:
  <<: (( &temporary ))
  cert:
    commonName: "terminal-admission-controller.terminal-system.svc.cluster.local"
    validity: 87600
    usage:
      - ServerAuth
      - ClientAuth
      - KeyEncipherment
    hosts:
      - "terminal-admission-controller"
      - "terminal-admission-controller.terminal-system"
      - "terminal-admission-controller.terminal-system.svc"
      - "terminal-admission-controller.terminal-system.svc.cluster"
      - "terminal-admission-controller.terminal-system.svc.cluster.local"

state:
  <<: (( &state(merge none) ))
  ca: (( utilities.certs.selfSignedCA("ca-gardener-term", false) ))
  cert: (( utilities.certs.keyCertForCA(spec.cert, ca, false) ))
