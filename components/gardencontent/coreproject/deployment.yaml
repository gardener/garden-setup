# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
imports:
landscape: (( &temporary ))
utilities: (( &temporary ))

plugins:
  - kubectl:
      - core
  - shoot-check

shoot-check:
  kubeconfig: (( imports.kube_apiserver.export.kubeconfig ))
  namespace: (( values.namespace ))

values:
  projectname: core
  namespace: garden-core
  secretname: (( "core-" landscape.iaas.type ))

core:
  kubeconfig: (( imports.kube_apiserver.export.kubeconfig ))
  manifests:
    - apiVersion: v1
      kind: Namespace
      metadata:
        labels:
          garden.sapcloud.io/role: project
          project.garden.sapcloud.io/name: (( values.projectname ))
        name: (( values.namespace ))
    - apiVersion: v1
      kind: Secret
      metadata:
        name: (( values.secretname ))
        namespace: (( values.namespace ))
      type: Opaque
      data: (( utilities.secretdata(landscape.iaas.credentials) ))
    - apiVersion: garden.sapcloud.io/v1beta1
      kind: Project
      metadata:
        name: (( values.projectname ))
      spec:
        namespace: (( values.namespace ))
    - apiVersion: garden.sapcloud.io/v1beta1
      kind: SecretBinding
      metadata:
        labels:
          cloudprofile.garden.sapcloud.io/name: (( imports.initialseed.export.profile ))
        name: (( values.secretname ))
        namespace: (( values.namespace ))
      secretRef:
        name: (( values.secretname ))