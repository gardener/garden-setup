# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
imports: (( &temporary ))
landscape: (( &temporary ))
utilities: (( &temporary ))

settings:
  project_name: core
  project_namespace: garden-core
  secret_name_template: (( &template( settings.project_name "-" v.type "-" v.name ) ))

plugins:
  - kubectl:
      - core
  - shoot-check

shoot-check:
  kubeconfig: (( imports.kube_apiserver.export.kubeconfig ))
  namespace: (( .settings.project_namespace ))

secret_template:
  <<: (( &template &temporary ))
  secretname: (( *.settings.secret_name_template ))
  manifest:
    - apiVersion: v1
      kind: Secret
      metadata:
        name: (( secretname ))
        namespace: (( .settings.project_namespace ))
      type: Opaque
      data: (( utilities.secretdata(v.credentials) ))
    - apiVersion: core.gardener.cloud/v1beta1
      kind: SecretBinding
      metadata:
        labels:
          cloudprofile.garden.sapcloud.io/name: (( v.name ))
        name: (( secretname ))
        namespace: (( .settings.project_namespace ))
      secretRef:
        name: (( secretname ))

core:
  kubeconfig: (( imports.kube_apiserver.export.kubeconfig ))
  manifests:
    - apiVersion: v1
      kind: Namespace
      metadata:
        labels:
          gardener.cloud/role: project
          project.gardener.cloud/name: (( .settings.project_name ))
        name: (( .settings.project_namespace ))
    - apiVersion: core.gardener.cloud/v1beta1
      kind: Project
      metadata:
        name: (( .settings.project_name ))
      spec:
        namespace: (( .settings.project_namespace ))
        createdBy:
          apiGroup: rbac.authorization.k8s.io
          kind: User
          name: garden:client:admin
        members: (( valid( .landscape.identity.users ) ? sum[.landscape.identity.users|[]|s,u|-> s *.projectMemberTemplate] :~~ ))
        owner:
          apiGroup: rbac.authorization.k8s.io
          kind: User
          name: garden:client:admin
    - <<: (( sum[imports.profiles.export.profiles|[]|s,v|-> valid( v.credentials ) ? s (*secret_template).manifest :s ] ))

projectMemberTemplate:
  <<: (( &temporary &template ))
  apiGroup: rbac.authorization.k8s.io
  kind: User
  name: (( u.email ))
  role: viewer
