# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
landscape: (( &temporary ))
imports: (( &temporary ))
utilities: (( &temporary ))
env: (( &temporary ))

plugins:
  - cleanup
  - kubectl

shoot-check:
  kubeconfig: (( imports.kube_apiserver.export.kubeconfig ))
  seeds: (( sum[landscape.iaas|[]|s,v|-> v.mode == "seed" -or v.mode == "soil" ? s v.name :s ] ))

cleanup:
  kubeconfig: (( landscape.clusters.[0].kubeconfig ))
  namespace: (( landscape.namespace ))

providerconfig:
  <<: (( &template &temporary ))
  name: (( v.name ))
  namespace: (( landscape.namespace ))
  dns:
    type: (( landscape.dns.type ))
  iaas: (( read(__ctx.DIR "/../provider/" v.type "/seed.yaml", "import") ))
  config: (( v ))
  seed:
    ingressdomain: (( "ingress." name ".seed." .landscape.domain ))
    kubeconfig: (( asyaml( v.cluster.kubeconfig ) || read(env.ROOTDIR "/" landscape.clusters.[0].kubeconfig, "text") ))
    networks: (( v.cluster.networks || landscape.clusters.[0].networks ))
  secretname: (( name "-" v.mode ))

kubectl: (( sum[landscape.iaas|[]|s,v|-> v.mode == "seed" -or v.mode == "soil" ? s utilities.kubectl.generate( __ctx.DIR "/../manifests/seed_manifest.yaml", imports.kube_apiserver.export.kubeconfig, *providerconfig ) :s ] ))

