---
imports: (( &temporary ))
landscape: (( &temporary ))
env: (( &temporary ))

plugins:
  - kubectl
  - shoot-check

shoot-check:
  kubeconfig: (( imports.kube_apiserver.export.kubeconfig ))

# list of extensions taken from component.yaml (deployment.extensions)
extensions: (( &temporary ))

# instantiated manifest templates
rendered_extension_manifests: (( &temporary( sum[extensions|{}|s,n|-> s { n = *.spec_template }] ) ))

# auxiliary functions
extension_controllers_func:
  <<: (( &temporary ))
  ignore:
    - .git
  _joinPath: (( |p,c|-> p == "" ? c :(p "/" c) ))
  files: (( |d,p|->map[list_files(_._joinPath(d,p))|v|->contains(_.ignore, v) ? ~ :_._joinPath( p, v )] sum[map[list_dirs(d "/" p)|d|-> contains(_.ignore,d) ? ~ :d]|[]|s,v|->s _.files(d,_._joinPath(p, v))] ))
  chartConfig: (( |path,dir|-> archive( sum[extension_controllers_func.files( path, dir )|{}|s,e|->s { e = { "data" = read( path "/" e, "text" ) } }], "targz" ) ))

kubectl:
  kubeconfig: (( imports.kube_apiserver.export.kubeconfig ))
  manifests: (( sum[rendered_extension_manifests.[*].manifests|[]|s,e|->s e.[*]] ))

# this template gets evaluated for each entry in extension_manifests
spec_template:
  <<: (( &temporary &template ))
  version: (( &temporary( .landscape.versions.gardener.extensions[n] ) ))
  valuesOverwrite: (( &temporary( valid(.landscape.gardener.extensions[n].valueOverwrites) ? .landscape.gardener.extensions[n].valueOverwrites :~ ) ))
  manifests: (( manifest_templates.render_manifest_template( *.extension_specs[n] ) ))
  encoded_chart: (( &temporary( .extension_controllers_func.chartConfig( paths.prefix, paths.suffix ) ) ))
  paths:
    <<: (( &temporary ))
    raw: (( env.GENDIR "/extensions." n "/repo/" version.chart_path ))
    pos: (( lastindex( raw, "/" ) ))
    prefix: (( substr( raw, 0, pos ) ))
    suffix: (( substr( raw, pos + 1 ) ))

manifest_templates:
  <<: (( &temporary ))
  render_manifest_template: (( |data|-> [ *_.deployment, *_.registration ] ))
  deployment:
    <<: (( &template ))
    apiVersion: core.gardener.cloud/v1beta1
    kind: ControllerDeployment
    metadata:
      name: (( data.extensionName ))
    type: (( data.type ))
    providerConfig: (( data.providerConfig ))
  registration:
    <<: (( &template ))
    apiVersion: core.gardener.cloud/v1beta1
    kind: ControllerRegistration
    metadata:
      name: (( data.extensionName ))
    spec:
      deployment:
        deploymentRefs:
        - name: (( data.extensionName ))
      resources: (( data.resources ))


extension_specs:
  <<: (( &temporary ))

########################################
  os-ubuntu:
########################################
    <<: (( &template ))
    extensionName: os-ubuntu
    type: helm
    providerConfig:
      chart: (( encoded_chart ))
      values:
        <<: (( valuesOverwrite ))
        concurrentSyncs: 25
        image:
          repository: (( version.image_repo || ~~ ))
          tag: (( version.image_tag || ~~ ))
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 20m
            memory: 64Mi
    resources:
      - kind: OperatingSystemConfig
        type: ubuntu
        primary: true

########################################
  os-gardenlinux:
########################################
    <<: (( &template ))
    extensionName: os-gardenlinux
    type: helm
    providerConfig:
      chart: (( encoded_chart ))
      values:
        <<: (( valuesOverwrite ))
        concurrentSyncs: 25
        image:
          repository: (( version.image_repo || ~~ ))
          tag: (( version.image_tag || ~~ ))
        resources:
          limits:
            cpu: 300m
            memory: 512Mi
          requests:
            cpu: 20m
            memory: 128Mi
    resources:
    - kind: OperatingSystemConfig
      type: gardenlinux
      primary: true

########################################
  os-suse-chost:
########################################
    <<: (( &template ))
    extensionName: os-suse-chost
    type: helm
    providerConfig:
      chart: (( encoded_chart ))
      values:
        <<: (( valuesOverwrite ))
        concurrentSyncs: 20
        image:
          repository: (( version.image_repo || ~~ ))
          tag: (( version.image_tag || ~~ ))
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 20m
            memory: 64Mi
    resources:
    - kind: OperatingSystemConfig
      type: suse-chost
      primary: true

########################################
  dns-external:
########################################
    <<: (( &template ))
    extensionName: dns-external
    type: helm
    providerConfig:
      chart: (( encoded_chart ))
      values:
        <<: (( valuesOverwrite ))
        createCRDs: false
        fullnameOverride: seed-dns-controller-manager
        image:
          repository: (( version.image_repo || ~~ ))
          tag: (( version.image_tag || ~~ ))
        configuration:
          poolSize: 20
          controllers: dnscontrollers
          identifier: ""
          serverPortHttp: 8080
          ttl: (( .landscape.defaultTTL ))
    resources:
    - kind: DNSProvider
      type: aws-route53
      primary: true
    - kind: DNSProvider
      type: alicloud-dns
      primary: true
    - kind: DNSProvider
      type: azure-dns
      primary: true
    - kind: DNSProvider
      type: google-clouddns
      primary: true
    - kind: DNSProvider
      type: openstack-designate
      primary: true
    - kind: DNSProvider
      type: cloudflare-dns
      primary: true
    - kind: DNSProvider
      type: infoblox-dns
      primary: true

########################################
  provider-aws:
########################################
    <<: (( &template ))
    extensionName: provider-aws
    type: helm
    providerConfig:
      chart: (( encoded_chart ))
      values:
        <<: (( valuesOverwrite ))
        image:
          repository: (( version.image_repo || ~~ ))
          tag: (( version.image_tag || ~~ ))
        resources:
          limits:
            memory: 1Gi
    resources:
    - kind: Infrastructure
      type: aws
      primary: true
    - kind: ControlPlane
      type: aws
      primary: true
    - kind: Worker
      type: aws
      primary: true
    - kind: BackupBucket
      type: aws
      primary: true
    - kind: BackupEntry
      type: aws
      primary: true

########################################
  provider-azure:
########################################
    <<: (( &template ))
    extensionName: provider-azure
    type: helm
    providerConfig:
      chart: (( encoded_chart ))
      values:
        <<: (( valuesOverwrite ))
        image:
          repository: (( version.image_repo || ~~ ))
          tag: (( version.image_tag || ~~ ))
        resources:
          limits:
            memory: 1Gi
    resources:
    - kind: Infrastructure
      type: azure
      primary: true
    - kind: ControlPlane
      type: azure
      primary: true
    - kind: Worker
      type: azure
      primary: true
    - kind: BackupBucket
      type: azure
      primary: true
    - kind: BackupEntry
      type: azure
      primary: true

########################################
  provider-gcp:
########################################
    <<: (( &template ))
    extensionName: provider-gcp
    type: helm
    providerConfig:
      chart: (( encoded_chart ))
      values:
        <<: (( valuesOverwrite ))
        image:
          repository: (( version.image_repo || ~~ ))
          tag: (( version.image_tag || ~~ ))
        resources:
          limits:
            memory: 1Gi
    resources:
    - kind: Infrastructure
      type: gcp
      primary: true
    - kind: ControlPlane
      type: gcp
      primary: true
    - kind: Worker
      type: gcp
      primary: true
    - kind: BackupBucket
      type: gcp
      primary: true
    - kind: BackupEntry
      type: gcp
      primary: true

########################################
  provider-openstack:
########################################
    <<: (( &template ))
    extensionName: provider-openstack
    type: helm
    providerConfig:
      chart: (( encoded_chart ))
      values:
        <<: (( valuesOverwrite ))
        controllers:
          infrastructure:
            concurrentSyncs: 50
            ignoreOperationAnnotation: false
          worker:
            concurrentSyncs: 50
        image:
          repository: (( version.image_repo || ~~ ))
          tag: (( version.image_tag || ~~ ))
        resources:
          limits:
            memory: 1Gi
    resources:
    - kind: Infrastructure
      type: openstack
      primary: true
    - kind: ControlPlane
      type: openstack
      primary: true
    - kind: Worker
      type: openstack
      primary: true
    - kind: BackupBucket
      type: openstack
      primary: true
    - kind: BackupEntry
      type: openstack
      primary: true

########################################
  provider-vsphere:
########################################
    <<: (( &template ))
    extensionName: provider-vsphere
    type: helm
    providerConfig:
      chart: (( encoded_chart ))
      values:
        <<: (( valuesOverwrite ))
        config:
          etcd:
            storage:
              capacity: 25Gi
        controllers:
          controlplane:
            concurrentSyncs: 50
          infrastructure:
            concurrentSyncs: 50
          worker:
            concurrentSyncs: 50
        image:
          repository: (( version.image_repo || ~~ ))
          tag: (( version.image_tag || ~~ ))
        resources:
          limits:
            memory: 1Gi
    resources:
    - kind: Infrastructure
      type: vsphere
      primary: true
    - kind: ControlPlane
      type: vsphere
      primary: true
    - kind: Worker
      type: vsphere
      primary: true

########################################
  networking-calico:
########################################
    <<: (( &template ))
    extensionName: networking-calico
    type: helm
    providerConfig:
      chart: (( encoded_chart ))
      values:
        <<: (( valuesOverwrite ))
        image:
          repository: (( version.image_repo || ~~ ))
          tag: (( version.image_tag || ~~ ))
    resources:
    - kind: Network
      type: calico
      primary: true

########################################
  shoot-cert-service:
########################################
    <<: (( &template ))
    extensionName: shoot-cert-service
    type: helm
    providerConfig:
      chart: (( encoded_chart ))
      values:
        <<: (( valuesOverwrite ))
        certificateConfig:
          defaultIssuer:
            name: garden
            acme:
              email: (( valid( landscape.dashboard.terminals.cert.email ) ? landscape.dashboard.terminals.cert.email :( landscape.cert-manager.email || landscape.identity.users[0].email ) ))
              server: (( valid( landscape.dashboard.terminals.cert.server ) ? landscape.dashboard.terminals.cert.server :( landscape.cert-manager.server.url == "live" ? "https://acme-v02.api.letsencrypt.org/directory" :landscape.cert-manager.server.url ) ))
              privateKey: (( ( valid( landscape.dashboard.terminals.cert.privateKey ) ? landscape.dashboard.terminals.cert.privateKey :( ! valid( landscape.dashboard.terminals.cert.server ) ? landscape.cert-manager.privateKey :~~ ) ) || ~~ ))
              propagationTimeout: (( .landscape.defaultTTL "s" ))
        image:
          repository: (( version.image_repo || ~~ ))
          tag: (( version.image_tag || ~~ ))
    resources:
    - kind: Extension
      type: shoot-cert-service
      globallyEnabled: true
      primary: true

########################################
  shoot-dns-service:
########################################
    <<: (( &template ))
    extensionName: shoot-dns-service
    type: helm
    providerConfig:
      chart: (( encoded_chart ))
      values:
        <<: (( valuesOverwrite ))
        image:
          repository: (( version.image_repo || ~~ ))
          tag: (( version.image_tag || ~~ ))
    resources:
    - kind: Extension
      type: shoot-dns-service
      globallyEnabled: true
      primary: true
