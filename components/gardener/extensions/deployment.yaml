---
imports: (( &temporary ))
landscape: (( &temporary ))
env: (( &temporary ))

plugins:
  - <<: (( sum[extensions|[]|s,n,v|-> s [{ "extension" = "extensions." n }]] ))
  - kubectl
  - shoot-check

shoot-check:
  kubeconfig: (( imports.kube_apiserver.export.kubeconfig ))

extensions: (( sum[extensions_manifests|{}|s,n,v|-> s { n = *.spec_template }] ))

kubectl:
  kubeconfig: (( imports.kube_apiserver.export.kubeconfig ))
  files: (( extensions.[*].manifest ))

# this template gets evaluated for each entry in extensions_manifests
spec_template:
  <<: (( &temporary &template ))
  name: (( n ))
  version: (( &temporary( .landscape.versions.gardener.extensions[n] ) ))
  repo: (( version.repo ))
  tag: (( version.tag || ~~ ))
  branch: (( version.branch || ~~ ))
  commit: (( version.commit || ~~ ))
  files:
    - (( version.chart_path ))
  manifest: (( "extensions." name "/manifest.yaml" ))
  tmp_manifest_template: (( &temporary( *v ) ))
  manifest_template: (( asyaml( tmp_manifest_template ) ))
  chart_path: (( version.chart_path ))

# the ControllerRegistration manifests
# '<CHART>' will be replaced by the actual chart
extensions_manifests:
  <<: (( &temporary ))
  os-coreos:
    <<: (( &template ))
    apiVersion: core.gardener.cloud/v1alpha1
    kind: ControllerRegistration
    metadata:
      name: os-coreos
    spec:
      deployment:
        providerConfig:
          chart: "<CHART>"
          values:
            concurrentSyncs: 25
            image:
              repo: (( version.image_repo || ~~ ))
              tag: (( version.image_tag || ~~ ))
            resources:
              limits:
                cpu: 100m
                memory: 256Mi
              requests:
                cpu: 20m
                memory: 64Mi
        type: helm
      resources:
      - kind: OperatingSystemConfig
        type: coreos
  os-coreos-alicloud:
    <<: (( &template ))
    apiVersion: core.gardener.cloud/v1alpha1
    kind: ControllerRegistration
    metadata:
      name: os-coreos-alicloud
    spec:
      deployment:
        providerConfig:
          chart: "<CHART>"
          values:
            concurrentSyncs: 25
            image:
              repo: (( version.image_repo || ~~ ))
              tag: (( version.image_tag || ~~ ))
            resources:
              limits:
                cpu: 100m
                memory: 256Mi
              requests:
                cpu: 20m
                memory: 64Mi
        type: helm
      resources:
      - kind: OperatingSystemConfig
        type: coreos-alicloud
  dns-external:
    <<: (( &template ))
    apiVersion: core.gardener.cloud/v1alpha1
    kind: ControllerRegistration
    metadata:
      name: dns-external
    spec:
      resources:
      - kind: DNSProvider
        type: aws-route53
      - kind: DNSProvider
        type: alicloud-dns
      - kind: DNSProvider
        type: azure-dns
      - kind: DNSProvider
        type: google-clouddns
      - kind: DNSProvider
        type: openstack-designate
      deployment:
        type: helm
        providerConfig:
          chart: "<CHART>"
          values:
            createCRDs: false
            fullnameOverride: seed-dns-controller-manager
            image:
              repo: (( version.image_repo || ~~ ))
              tag: (( version.image_tag || ~~ ))
            configuration:
              poolSize: 20
              identifier: ""
              serverPortHttp: 8080