---
landscape: (( &temporary ))

component:
  imports:
    - gardener: gardener/runtime
    - kube_apiserver: "kube-apiserver"
    - namespace

  stubs:
    - lib/templates/utilities.yaml
    - lib/templates/state.yaml
    - lib/templates/certs.yaml

  plugins:
    - <<: (( sum[.extensions|[]|s,n,v|-> s [{ "-echo" = "--------------------------------------------------" }, { "-echo" = "checking out charts for extension '" n "'" }, { "git" = "extensions." n }]] ))

# input for git plugin
extensions: (( sum[.deployment.extensions|{}|s,n|-> s { n = *spec_template }] ))

spec_template:
  <<: (( &temporary &template ))
  version: (( &temporary( .landscape.versions.gardener.extensions[n] ) ))
  repo: (( version.repo ))
  tag: (( version.tag || ~~ ))
  branch: (( version.branch || ~~ ))
  commit: (( version.commit || ~~ ))
  files:
    - (( version.chart_path ))
    - (( contains( deployment.admissionControllers, n ) ? ( "charts/" version.admission_controller_name ) :~~ ))

deployment:
  # which extensions should be deployed
  # all need a matching node in landscape.versions.gardener.extensions in the acre.yaml file
  # and a manifest template in extension_manifests in this component's deployment.yaml
  extensions: (( uniq( sum[.default_extensions|[]|s,e|->s ( contains(.deactivated_extensions, e) ? ~ :e )] .activated_extensions ) ))
  admissionControllers: (( uniq( intersect( extensions, .admissionControllers ) ) ))

default_extensions:
  - os-ubuntu
  - os-suse-chost
  - os-gardenlinux
  - networking-calico
  - runtime-gvisor
  - <<: (( sum[.infrastructures|[]|s,e|-> s [ "provider-" e ]] ))
  - (( ( .landscape.dashboard.terminals.active || false ) ? "shoot-cert-service" :~~ ))
activated_extensions: (( valid( landscape.gardener.extensions ) ? keys(select{landscape.gardener.extensions|e|-> valid( e.active ) -and ( e.active == true )}) :[] ))
deactivated_extensions: (( valid( landscape.gardener.extensions ) ? keys(select{landscape.gardener.extensions|e|-> valid( e.active ) -and ( e.active == false )}) :[] ))

admissionControllers: (( &temporary ( valid( landscape.gardener.extensions ) ? sum[landscape.gardener.extensions|[]|s,k,v|-> valid( v.admissionController ) -and ( v.admissionController == true ) -and valid( landscape.versions.gardener.extensions[k].admission_controller_name ) ? s k :s] :[] ) ))

infrastructures: (( &temporary ( uniq( sum[.landscape.iaas|[]|s,e|-> s e.type ( e.seeds.[*].type || ~ ) ] ) ) ))